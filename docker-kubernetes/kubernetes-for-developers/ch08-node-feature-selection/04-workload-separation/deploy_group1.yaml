---
# If you miss the label, then these Deployments won’t ever be scheduled as there won’t be a node
# that meets the nodeSelector requirement. If you label, but don’t taint the nodes, then these
# workloads will schedule, and be separated from each other (by way of the node selector), but
# other random Pods might land on them as well since there is no taint to keep them away.
#
# $ kubectl taint nodes minikube-m02 group=1:NoSchedule #C
# $ kubectl label node minikube-m02 group=1 #C
#
# Both the taint and the label are required (as is the matching toleration and nodeSelector in the
# deployment) as they serve different purposes. The taint prevents all but those workloads that
# tolerate the taint from landing on it, while the label can be used to ensure the workload doesn’t
# land on any other nodes (such as nodes without any taints). For convenience, I used the same
# key/value pair for both the taint and the label (e.g. “group=1”), but this doesn’t have to be the case.
apiVersion: apps/v1
kind: Deployment
metadata:
  name: timeserver1
spec:
  replicas: 5
  selector:
    matchLabels:
      pod: timeserver1-pod
  template:
    metadata:
      labels:
        pod: timeserver1-pod
    spec:
      tolerations:
        - key: group
          operator: Equal
          value: '1'
          effect: NoSchedule
      nodeSelector:
        group: '1'
      containers:
        - name: timeserver-container
          image: docker.io/wdenniss/timeserver:5
