---
# create a group named developers and a user, just to show the modules. In
# a more production-like Ansible project, the users and groups would be defined
# in group_vars with dictionaries to loop over, and the password would be an
# encrypted variable, but for better readability we’ll keep this quite simple
- name: Ensure group developers
  win_group:
    name: developers

- name: Ensure ansible user exists
  win_user:
    name: ansible
    password: '%4UJ[nLbQz*:BJ%9gV|x'
    groups: developers
    password_expired: true
    groups_action: add
# The win_user’s default behavior of groups is replace: the user will
# be removed from any other group they are already a member of.
# We change the default to add to prevent any removal. However, we
# can overwrite the behavior per user.

- name: Manage tools directory
  win_file:
    path: 'C:/Tools'
    state: directory

- name: Manage Features
  win_feature:
    name: '{{ item }}'
    state: absent
  loop: '{{ windows_features_remove }}'

- name: Manage IIS Web-Server with sub features and management tools
  win_feature:
    name: Web-Server
    state: present
    include_sub_features: true
    include_management_tools: true
  register: win_iis_feature

- name: Reboot if installing Web-Server feature requires it
  win_reboot:
  when: win_iis_feature.reboot_required
